<Window x:Class="Floe.UI.ChatWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding ElementName=tabsChat, Path=SelectedContent.Title}" Height="399" Width="722" 
		xmlns:local="clr-namespace:Floe.UI"
        xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
		MinWidth="300"  MinHeight="250" WindowStyle="None" ResizeMode="CanResize" AllowsTransparency="True"
		Background="Transparent" Icon="{Binding Source={x:Static local:App.ApplicationImage}}">
	<Window.CommandBindings>
		<CommandBinding Command="local:ChatWindow.ChatCommand" Executed="ExecuteChat"/>
		<CommandBinding Command="local:ChatWindow.CloseCommand" Executed="ExecuteClose" CanExecute="CanExecuteClose"/>
		<CommandBinding Command="local:ChatWindow.NewTabCommand" Executed="ExecuteNewTab"/>
		<CommandBinding Command="local:ChatWindow.DetachCommand" Executed="ExecuteDetach"/>
	</Window.CommandBindings>
	<Window.Resources>
		<local:BrushToColorConverter x:Key="brushToColor"/>
		<SolidColorBrush x:Key="winBG" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowBackground}"/>
		<SolidColorBrush x:Key="winFG" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}"/>
		<SolidColorBrush x:Key="winFGx0" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}" Opacity="0"/>
		<SolidColorBrush x:Key="winFGx40" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}" Opacity="0.4"/>
		<SolidColorBrush x:Key="winFGx80" Color="{Binding Source={x:Static local:App.Settings}, Path=Current.Colors.WindowForeground}" Opacity="0.8"/>
		<LinearGradientBrush x:Key="winTabSep" StartPoint="0,0" EndPoint="0,1">
			<GradientStop Offset="0" Color="{Binding Source={StaticResource winFGx0}, Converter={StaticResource brushToColor}}"/>
			<GradientStop Offset="0.5" Color="{Binding Source={StaticResource winFG}, Converter={StaticResource brushToColor}}"/>
			<GradientStop Offset="1" Color="{Binding Source={StaticResource winFGx0}, Converter={StaticResource brushToColor}}"/>
		</LinearGradientBrush>

		<Style x:Key="uiButtonStyle" TargetType="Button">
			<Setter Property="Background" Value="{StaticResource winBG}"/>
			<Setter Property="Foreground" Value="{StaticResource winFG}"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="{TemplateBinding Background}" BorderThickness="1"
								BorderBrush="{TemplateBinding BorderBrush}"
								Padding="{TemplateBinding Padding}">
							<ContentPresenter VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsEnabled" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" Value="{StaticResource winFG}"/>
								<Setter Property="Background" Value="{StaticResource winFGx40}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.4"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="{StaticResource winFGx80}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="uiRepeatButtonStyle" TargetType="RepeatButton">
			<Setter Property="Background" Value="{StaticResource winBG}"/>
			<Setter Property="Foreground" Value="{StaticResource winFG}"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RepeatButton">
						<Border Background="{TemplateBinding Background}" BorderThickness="1"
								BorderBrush="{TemplateBinding BorderBrush}"
								Padding="{TemplateBinding Padding}">
							<ContentPresenter VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsEnabled" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" Value="{StaticResource winFG}"/>
								<Setter Property="Background" Value="{StaticResource winFGx40}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.4"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="{StaticResource winFGx80}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="uiMenuButtonStyle" TargetType="MenuItem">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="MenuItem">
						<Border Background="Transparent" BorderThickness="1"
								BorderBrush="Transparent" x:Name="border1">
							<Grid>
								<ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
								<Popup Name="Popup" Placement="Bottom"
									   IsOpen="{TemplateBinding IsSubmenuOpen}"
									   AllowsTransparency="True"
									   Focusable="False"
									   PopupAnimation="Fade">
									<mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shdw">
										<ContentControl IsTabStop="False" Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=SubmenuContent}}" Name="SubMenuBorder">
											<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}">
												<ItemsPresenter Margin="2,2,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
											</ScrollViewer>
										</ContentControl>
									</mwt:SystemDropShadowChrome>
								</Popup>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsEnabled" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" TargetName="border1" Value="{StaticResource winFG}"/>
								<Setter Property="Background" TargetName="border1" Value="{StaticResource winFGx40}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.4"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border1" Value="{StaticResource winFGx80}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Geometry x:Key="closeTabButtonGeometry">M0,0 L6,6 M0,6 L6,0</Geometry>
		<Geometry x:Key="minimizeButtonGeometry">M0,8 L8,8</Geometry>
		<Geometry x:Key="maximizeButtonGeometry">M0,0 L8,0 L8,8 L0,8 L0,0 M0,1 L8,1</Geometry>
		<Geometry x:Key="closeButtonGeometry">M0,0 L8,8 M0,8 L8,0</Geometry>
		<Geometry x:Key="settingsButtonGeometry">M3,4 L6,8 L10,0</Geometry>

		<Style x:Key="tabCloseButtonStyle" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="border" CornerRadius="2" BorderThickness="1"
								Background="Transparent"
								BorderBrush="Transparent">
							<Grid>
								<Path x:Name="buttonPath" Margin="2"
									  Data="{StaticResource closeTabButtonGeometry}"
									  Stroke="{StaticResource winFG}"
									  StrokeThickness="2"
									  StrokeStartLineCap="Round"
									  StrokeEndLineCap="Round"
									  Stretch="Uniform"
									  VerticalAlignment="Center"
									  HorizontalAlignment="Center"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Visibility" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource winFG}"/>
								<Setter TargetName="border" Property="Background" Value="{StaticResource winFGx40}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="border" Property="Background" Value="{StaticResource winFGx80}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<local:CanScrollLeftConverter x:Key="canScrollLeft"/>
		<local:CanScrollRightConverter x:Key="canScrollRight"/>
		<Geometry x:Key="leftArrowGeometry">M0,4 L8,8 8,0Z</Geometry>
		<Geometry x:Key="rightArrowGeometry">M0,0 L8,4 L0,8Z</Geometry>
		<Geometry x:Key="downArrowGeometry">M0,0 L8,0 M0,2 L4,8 L8,2</Geometry>
		<Path x:Key="leftArrowPath" Data="{StaticResource leftArrowGeometry}"
			  Stroke="{StaticResource winFG}" Fill="{StaticResource winFG}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
		<Path x:Key="rightArrowPath" Data="{StaticResource rightArrowGeometry}"
			  Stroke="{StaticResource winFG}" Fill="{StaticResource winFG}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
		<Path x:Key="downArrowPath" Data="{StaticResource downArrowGeometry}"
			  Stroke="{StaticResource winFG}" Margin="2,0,2,0" Fill="{StaticResource winFG}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
	</Window.Resources>

	<Border Background="{StaticResource winBG}" CornerRadius="8" Padding="5, 0, 5, 5">
		<Grid x:Name="grdRoot">
			<Grid.RowDefinitions>
				<RowDefinition Height="30"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Label Grid.Row="0" Grid.Column="0" Content="{Binding Title}" Foreground="{StaticResource winFG}" VerticalAlignment="Center"/>
			<StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
				<Button x:Name="btnSettings" Focusable="False" Height="18" Width="18" Style="{StaticResource uiButtonStyle}" Margin="0,0,2,0" Padding="0" Click="btnSettings_Click">
					<Path Margin="2" 
						Data="{StaticResource settingsButtonGeometry}"
						Stroke="{StaticResource winFG}"
						StrokeThickness="2"
						StrokeStartLineCap="Round"
						StrokeEndLineCap="Round"
						Stretch="Uniform"
						HorizontalAlignment="Center">
					</Path>
					<Button.ToolTip>
						<ToolTip Content="Settings"/>
					</Button.ToolTip>
				</Button>
				<Button x:Name="btnMinimize" Focusable="False" Height="18" Width="18" Style="{StaticResource uiButtonStyle}" Margin="0,0,2,0" Padding="0" Click="btnMinimize_Click">
					<Path Margin="2,10,2,2"
						Data="{StaticResource minimizeButtonGeometry}"
						Stroke="{StaticResource winFG}"
						StrokeThickness="2"
						StrokeStartLineCap="Round"
						StrokeEndLineCap="Round"
						Stretch="Uniform"
						HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
				</Button>
				<Button x:Name="btnMaximize" Focusable="False" Height="18" Width="18" Style="{StaticResource uiButtonStyle}" Margin="0,0,2,0" Click="btnMaximize_Click">
					<Path Margin="2"
						Data="{StaticResource maximizeButtonGeometry}"
						Stroke="{StaticResource winFG}"
						StrokeThickness="2"
						StrokeStartLineCap="Round"
						StrokeEndLineCap="Round"
						Stretch="Uniform"
						VerticalAlignment="Center"
						HorizontalAlignment="Center"/>
				</Button>
				<Button x:Name="btnClose" Focusable="False" Height="18" Width="18" Style="{StaticResource uiButtonStyle}" Margin="0,0,6,0" Click="btnClose_Click">
					<Path Margin="2"
						Data="{StaticResource closeButtonGeometry}"
						Stroke="{StaticResource winFG}"
						StrokeThickness="2"
						StrokeStartLineCap="Round"
						StrokeEndLineCap="Round"
						Stretch="Uniform"
						VerticalAlignment="Center"
						HorizontalAlignment="Center"/>
				</Button>
			</StackPanel>
			<TabControl Grid.Row="2" Grid.ColumnSpan="2" Name="tabsChat" ItemsSource="{Binding Items}" TabStripPlacement="Bottom"
					FontFamily="Segoe UI" FontSize="14" SnapsToDevicePixels="True">
				<TabControl.Template>
					<ControlTemplate TargetType="TabControl">
						<DockPanel Background="{StaticResource winBG}">
							<Border BorderBrush="{StaticResource winFG}">
								<Border.Style>
									<Style TargetType="Border">
										<Style.Triggers>
											<DataTrigger Binding="{Binding Source={x:Static local:App.Settings}, Path=Current.Windows.TabStripPosition}" Value="Top">
												<Setter Property="DockPanel.Dock" Value="Top"/>
												<Setter Property="BorderThickness" Value="0,0,0,1"/>
											</DataTrigger>
										</Style.Triggers>
										<Setter Property="DockPanel.Dock" Value="Bottom"/>
									</Style>
								</Border.Style>
								<ScrollViewer Name="scrollViewer" Focusable="False"
								  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">

								<ScrollViewer.Template>
									<ControlTemplate TargetType="ScrollViewer">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
															Grid.Column="0"
															VirtualizingStackPanel.IsVirtualizing="False"
															Content="{TemplateBinding ScrollViewer.Content}">
												<ScrollContentPresenter.ContextMenu>
													<ContextMenu>
														<MenuItem Command="local:ChatWindow.NewTabCommand"/>
													</ContextMenu>
												</ScrollContentPresenter.ContextMenu>
											</ScrollContentPresenter>
											<StackPanel Grid.Column="1"
												Orientation="Horizontal">
												<RepeatButton Focusable="False" Command="ScrollBar.LineLeftCommand" Style="{StaticResource uiRepeatButtonStyle}"
													  Padding="2,5,2,5" Margin="5,0,0,0" VerticalAlignment="Center"
													  IsEnabled="{Binding ElementName=scrollViewer, Path=HorizontalOffset, Converter={StaticResource canScrollLeft}}"
													  Content="{StaticResource leftArrowPath}"/>
												<RepeatButton Focusable="False" Command="ScrollBar.LineRightCommand" Style="{StaticResource uiRepeatButtonStyle}"
													  Padding="2,5,2,5" VerticalAlignment="Center"
													  Content="{StaticResource rightArrowPath}">
													<RepeatButton.IsEnabled>
														<MultiBinding Converter="{StaticResource canScrollRight}">
															<Binding ElementName="scrollViewer" Path="HorizontalOffset"/>
															<Binding ElementName="scrollViewer" Path="ViewportWidth"/>
															<Binding ElementName="scrollViewer" Path="ExtentWidth"/>
														</MultiBinding>
													</RepeatButton.IsEnabled>
												</RepeatButton>
												<Menu VerticalAlignment="Center" Background="Transparent" BorderBrush="Transparent" Focusable="False">
													<MenuItem Padding="2,5,2,5" Background="{StaticResource winBG}" BorderThickness="0" Margin="0,0,5,0"
													  Header="{StaticResource downArrowPath}" Style="{StaticResource uiMenuButtonStyle}"
													  ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=Items}">
														<MenuItem.ItemContainerStyle>
															<Style TargetType="MenuItem">
																<Setter Property="Header" Value="{Binding Path=Content.Header}"/>
																<Setter Property="IsCheckable" Value="True" />
																<Setter Property="IsChecked" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
																<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
															</Style>
														</MenuItem.ItemContainerStyle>
													</MenuItem>
												</Menu>
											</StackPanel>
										</Grid>
									</ControlTemplate>
								</ScrollViewer.Template>
								<StackPanel IsItemsHost="True" Orientation="Horizontal" Height="25" Background="{StaticResource winBG}"/>
							</ScrollViewer>
							</Border>
							<ContentPresenter ContentSource="SelectedContent" Margin="0"/>
						</DockPanel>
					</ControlTemplate>
				</TabControl.Template>
				<TabControl.ItemContainerStyle>
					<Style TargetType="TabItem">
						<Style.Triggers>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Control.IsServer}" Value="False">
								<Setter Property="ContextMenu">
									<Setter.Value>
										<ContextMenu>
											<MenuItem Command="local:ChatWindow.DetachCommand" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent.PlacementTarget}"/>
										</ContextMenu>
									</Setter.Value>
								</Setter>
							</DataTrigger>
						</Style.Triggers>
						<Setter Property="Header" Value="{Binding RelativeSource={RelativeSource Self}, Path=Control.Header}"/>
						<Setter Property="Content" Value="{Binding Content}"/>
						<Setter Property="Foreground" Value="{StaticResource winFG}"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="TabItem">
									<Border Background="Transparent">
										<Border x:Name="border1">
											<Border x:Name="border2" BorderThickness="0,0,1,0" BorderBrush="{StaticResource winTabSep}">
												<Grid Height="25" HorizontalAlignment="Center">
													<Grid.RowDefinitions>
														<RowDefinition x:Name="row1" Height="7"/>
														<RowDefinition x:Name="row2" Height="*"/>
													</Grid.RowDefinitions>
													<Grid.ColumnDefinitions>
														<ColumnDefinition/>
														<ColumnDefinition/>
													</Grid.ColumnDefinitions>
													<Polygon x:Name="arrow" Grid.ColumnSpan="2" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Top" Points="0,0 10,6, 20,0"
														 Stroke="{StaticResource winFG}" Fill="{StaticResource winFG}" Opacity="0"/>
													<ContentPresenter Grid.Column="0" Grid.Row="1" Margin="5,0,10,0" x:Name="ContentSite" VerticalAlignment="Bottom" HorizontalAlignment="Center"
																  ContentSource="Header" RecognizesAccessKey="True"/>
													<Button x:Name="btnTabClose" Margin="0,0,3,0" Style="{StaticResource tabCloseButtonStyle}"
														Command="local:ChatWindow.CloseCommand" Grid.Column="1" Grid.Row="1"
														Height="Auto" VerticalAlignment="Bottom"
														CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=Control.Context}"/>
												</Grid>
											</Border>
										</Border>
									</Border>
									<ControlTemplate.Triggers>
										<DataTrigger Binding="{Binding Source={x:Static local:App.Settings}, Path=Current.Windows.TabStripPosition}" Value="Top">
											<Setter Property="Grid.Row" TargetName="arrow" Value="1"/>
											<Setter Property="Grid.Row" TargetName="ContentSite" Value="0"/>
											<Setter Property="Grid.Row" TargetName="btnTabClose" Value="0"/>
											<Setter Property="Height" TargetName="row1" Value="*"/>
											<Setter Property="Height" TargetName="row2" Value="7"/>
											<Setter Property="Points" TargetName="arrow" Value="0,6 10,0 20,6"/>
										</DataTrigger>
										<Trigger Property="IsSelected" Value="True">
											<Setter Property="Opacity" TargetName="arrow" Value="1"/>
										</Trigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="Border.IsMouseOver" Value="True"/>
												<Condition Property="IsSelected" Value="False"/>
											</MultiTrigger.Conditions>
											<Setter Property="Opacity" TargetName="arrow" Value="0.4"/>
										</MultiTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Control.NotifyState}" Value="NewActivity">
											<DataTrigger.EnterActions>
												<BeginStoryboard x:Name="animNewActivity">
													<BeginStoryboard.Storyboard>
														<Storyboard RepeatBehavior="Forever">
															<DoubleAnimation Storyboard.TargetName="arrow"
																			 Storyboard.TargetProperty="Opacity"
																			 From="0" To="0.5" Duration="0:0:1" AutoReverse="True"/>
														</Storyboard>
													</BeginStoryboard.Storyboard>
												</BeginStoryboard>
											</DataTrigger.EnterActions>
											<DataTrigger.ExitActions>
												<RemoveStoryboard BeginStoryboardName="animNewActivity"/>
											</DataTrigger.ExitActions>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Control.NotifyState}" Value="NewMessage">
											<DataTrigger.EnterActions>
												<BeginStoryboard x:Name="animNewMessage">
													<BeginStoryboard.Storyboard>
														<Storyboard RepeatBehavior="Forever">
															<DoubleAnimation Storyboard.TargetName="arrow"
																			 Storyboard.TargetProperty="Opacity"
																			 From="0" To="0.8" Duration="0:0:1" AutoReverse="True"/>
														</Storyboard>
													</BeginStoryboard.Storyboard>
												</BeginStoryboard>
											</DataTrigger.EnterActions>
											<DataTrigger.ExitActions>
												<RemoveStoryboard BeginStoryboardName="animNewMessage"/>
											</DataTrigger.ExitActions>
										</DataTrigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</TabControl.ItemContainerStyle>
			</TabControl>
		</Grid>
	</Border>
</Window>
